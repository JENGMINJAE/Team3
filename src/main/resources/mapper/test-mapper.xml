<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="test">



    <resultMap id="testResult" type="com.green.Team3.test.vo.TestVO">
        <id column="TEST_NUM" property="testNum"/>
        <result column="TEST_NAME" property="testName"/>
        <result column="TEST_DATE" property="testDate"/>
        <result column="TEST_MAXSCORE" property="testMaxScore"/>
        <result column="CLASS_NUM" property="classNum"/>
        <collection property="studentListVO" resultMap="operator"/>
    </resultMap>

    <resultMap id="scoreResult" type="com.green.Team3.test.vo.TestScoreVO">
    <id column="SCORE_NUM" property="scoreNum"/>
    <result column="SCORE" property="score"/>
    <result column="TEST_NUM" property="testNum"/>
    <result column="MEMBER_ID" property="memberId"/>
    <result column="RANKING" property="ranking"/>
    <association property="memberOneVO" resultMap="memberMap"/>
    </resultMap>


    <!-- 강사의 강의목록 조회   -->
    <select id="selectTeacherClassList" resultMap="clsMapper.cls">
        SELECT
        CLASS_NUM
        , TEACHER_NUM
        , CLASS_NAME
        , CLASS_PERSONNEL
        , CLASS_SDATE
        , CLASS_EDATE
        , CLASS_ENTER
        FROM CLASS_INFO
        WHERE TEACHER_NUM=1
    </select>



    <!--   평가명 목록조회 -->
    <select id="selectTest" resultMap="testResult">
        SELECT
        TEST_NAME
        , TEST_DATE
        , TEST_MAXSCORE
        , CLASS_NUM
        , TEST_NUM
        FROM TEST
        WHERE CLASS_NUM = #{classNum}
        ORDER BY TEST_NUM DESC
    </select>



    <!-- 평가명 추가   -->
    <insert id="insertTest">
        INSERT INTO test (
        TEST_NAME
        , TEST_DATE
        , TEST_MAXSCORE
        , CLASS_NUM
        )VALUES(
        #{testName}
        , #{testDate}
        , #{testPerfect}
        , #{classNum}
        )
    </insert>

<!-- /////////////////////////////////////////////////-->
    <!--  학생이름 조회  -->
    <select id="selectStuName" resultMap="stuResult">
        SELECT
        OPER_NUM
        , OP.MEMBER_ID
        , ACA.MEMBER_NAME
        , OP.CLASS_NUM
        , CLASS_NAME
        FROM operater OP
        INNER JOIN ACA_MEMBER ACA
        ON OP.MEMBER_ID = ACA.MEMBER_ID
        INNER JOIN class_information CI
        ON CI.CLASS_NUM = OP.CLASS_NUM
        WHERE OP.CLASS_NUM = #{classNum}
        ORDER BY ACA.MEMBER_NAME ASC
    </select>

    <!--  시험이름 클릭시 학생 시험성적 조회  -->
    <select id="selectTestScore" resultMap="scoreResult">
        SELECT
        TS.TEST_NUM
        ,OP.OPER_NUM
        ,TEST_NAME
        , SCORE
        , OP.MEMBER_ID
        , MEMBER_NAME
        , TEST_PERFECT
        , SCORE_NUM
        , DENSE_RANK()
        OVER (ORDER BY SCORE DESC) AS RANKING
        FROM test_score TS
        INNER JOIN test TT
        ON TS.TEST_NUM= TT.TEST_NUM
        INNER JOIN OPERATER OP
        ON OP.OPER_NUM = TS.OPER_NUM
        INNER JOIN aca_member ACA
        ON ACA.MEMBER_ID=OP.MEMBER_ID
        WHERE TS.TEST_NUM= #{testNum}
    </select>

    <!--  성적 등록 버튼 틀릭 시 저장 -->
    <insert id="insertStuScore">
        INSERT INTO TEST_SCORE (
        SCORE
        , TEST_NUM
        , OPER_NUM
        )SELECT
        #{score}
        ,#{testNum}
        ,#{operNum}
        FROM DUAL
        WHERE NOT EXISTS(
        SELECT
        TEST_NUM
        ,OPER_NUM
        FROM test_score
        WHERE TEST_NUM=#{testNum} AND OPER_NUM=#{operNum}
        )


    </insert>


    <!-- ////////////// 시험 성적 통계 조회 ////////////////////////// -->
    <!--classNum으로 받는  반 학생들 성적조회  -->
    <select id="totalStuScoreSelect" resultMap="scoreResult">
        SELECT
        OPER_NUM
        , TT.TEST_NUM
        , SCORE
        , TT.CLASS_NUM
        FROM test_score TS
        INNER JOIN test TT
        ON TS.TEST_NUM = TT.TEST_NUM
        WHERE TT.CLASS_NUM = #{classNum}
        ORDER BY TEST_NUM ASC
    </select>

    <!--  시험명  -->
    <select id="totalTestSelect" resultMap="testResult">
        SELECT
        TEST_NUM
        , TEST_NAME
        , CLASS_NUM
        FROM test
        WHERE CLASS_NUM = #{classNum}
        ORDER BY TEST_NUM ASC
    </select>

    <!-- 학생명 조회  -->
    <select id="totalStuSelect" resultMap="stuResult">
        SELECT
        OPER_NUM
        , OP.MEMBER_ID
        , MEMBER_NAME
        , OP.CLASS_NUM
        FROM OPERATER OP
        INNER JOIN aca_member ACA
        ON OP.MEMBER_ID= ACA.MEMBER_ID
        WHERE OP.CLASS_NUM = #{classNum}
        ORDER BY MEMBER_NAME ASC;
    </select>

    <!--  성적 등록 란에서 학생명, 시험지명 조회만   -->
    <select id="testNumInfo" resultMap="testResult">
        SELECT
        TT.TEST_NUM
        , TEST_NAME
        , OP.MEMBER_ID
        , ACA.MEMBER_NAME
        , TT.CLASS_NUM
        , OP.OPER_NUM
        FROM test TT
        INNER JOIN OPERATER OP
        ON TT.CLASS_NUM= OP.CLASS_NUM
        INNER JOIN aca_member ACA
        ON ACA.MEMBER_ID=OP.MEMBER_ID
        WHERE TT.TEST_NUM= #{testNum}
        ORDER BY ACA.MEMBER_NAME ASC;
    </select>

    <!--   클래스넘버 쓸려고..성적입력페이지에서     -->
    <select id="onlyClassNum" resultMap="classInfoResult">
        SELECT
        CLASS_NUM
        , CLASS_NAME
        FROM class_information
        WHERE CLASS_NUM= #{classNum}
    </select>


    <!--  점수 수정 업데이트   -->

    <update id="updateScore"  parameterType="java.util.List" >

        UPDATE test_score
        SET
        SCORE = #{score}
        WHERE Score_Num= #{scoreNum}

    </update>



    <!-- 테스트 검색란  -->
    <select id="searchTestList" resultMap="testResult">
        SELECT
        TEST_NUM
        , TEST_NAME
        , CLASS_NUM
        , TEST_DATE
        , TEST_PERFECT
        FROM test
        WHERE 1=1
        AND CLASS_NUM= #{classNum}
        <if test='searchValue != null and !searchValue.equals("")'>
            AND ${searchTestType} LIKE CONCAT ('%',#{searchValue},'%')
        </if>
        <if test='searchFromDate !=null and !searchFromDate.equals("")'>
            AND DATE_FORMAT(TEST_DATE,'%Y-%m-%d') &gt;= #{searchFromDate}
        </if>
        <if test='searchToDate!=null and !searchFromDate.equals("")'>
            AND DATE_FORMAT(TEST_DATE,'%Y-%m-%d') &lt;= #{searchToDate}
        </if>
        ORDER BY TEST_DATE DESC
    </select>







</mapper>































